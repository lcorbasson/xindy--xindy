b%%
%% This file is part of the `xindy'-project at the
%% Technical University Darmstadt, Computer Science Department
%% WG System Programming, Germany.
%%
%% This source is entirely written in the `noweb' literate programming
%% system.
%%
%% History at end
%%
%% Module: base
%%
%%
\RCS $Id$%
\RCS $Author$%
\RCS $Revision$%
\RCS $RCSfile$%
\RCS $State$%
\RCS $Date$%
%

\chapter{Module \module{Base}}

This module is the basic part of the project. It defines generic
functions, that are used in all other modules like pretty-printing and
other stuff. It is like a library that may be used from other parts of
the project.

\section{The root of the submodule}

<<*>>=
(lisp:in-package "BASE")
(lisp:provide "BASE")

(eval-when (eval load compile)
  (when (find-package "XP")
    (pushnew :XP *features*)))

(setq *print-pretty* t)
(setq *print-escape* t)

<<Error message system>>
<<Useful macros>>
<<Assertions>>

(defvar *RCS-Identifier* '( <<RCS-Identifier>> ))

<<Export-list of module \module{base}>>
@

<<RCS-Identifier>>=
("base" . "$Id$")
@

\subsection{Useful macros}

<<Useful macros>>=
(defmacro ifnot (expr then-body else-body)
  `(IF (NOT ,expr) ,then-body ,else-body))
@ %def ifnot

<<Export-list of module \module{base}>>=
(export 'ifnot)
@


\subsection{Error message system}

The error message system distinguished the following kind of errors:

\begin{description}
\item[info] indicates a informative message for the user. The
  character of these messages is not an error but simply an
  information.
\item[oops] indicates a serious problem. The user should correct the
  error or unpredictable behaviour might result. Use this macro to
  report a serious error. Additionally, all these problems are also
  reported to the logfile.
\item[nraw] (reverse of `warn'). Use this to report a situation which
  is correct but maybe unwanted. These are not reported to the logfile.
\item[gol] (reverse of `log') writes some useful information into the
  logfile.
\end{description}


<<Error message system>>=
(defmacro info (&rest msg)
  `(APPLY #'FORMAT *ERROR-OUTPUT* (LIST ,@msg)))
@ %def info

<<Error message system>>=
(defparameter *oops-error-message* "~&ERROR: ")

(defmacro oops (&rest msg)
  `(LET ((MSG (LIST ,@msg)))
    (FORMAT *ERROR-OUTPUT* BASE::*OOPS-ERROR-MESSAGE*)
    (APPLY #'FORMAT *ERROR-OUTPUT* MSG)
    (WHEN *LOGGING-ON*
      (FORMAT *LOGGING-STREAM* BASE::*OOPS-ERROR-MESSAGE*)
      (APPLY #'FORMAT *LOGGING-STREAM* MSG))))
@ %def oops

<<Error message system>>=
(defparameter *nraw-error-message* "~&ERROR: ")

(defmacro nraw (&rest msg)
  `(PROGN
    (FORMAT *ERROR-OUTPUT* BASE::*NRAW-ERROR-MESSAGE*)
    (APPLY #'FORMAT *ERROR-OUTPUT* (LIST ,@msg))))
@ %def nraw

\subsection*{Logging message system}

The following macro can be used to issue useful logging-information
into the stream \texttt{*log-stream*}. Logging can be dynamically
turned on and off by setting \texttt{*logging-on*} to \texttt{t} or
\texttt{nil}. Since the name \texttt{log} is already used for the
arithmetic function we name it \texttt{gol} which can be read as ''go
on logging''.

<<Error message system>>=
(defparameter *logging-stream* nil)
(defparameter *logging-on*     nil)

(defmacro gol (flag &rest msg)
  `(WHEN (AND ,flag *LOGGING-ON*)
    (APPLY #'FORMAT *LOGGING-STREAM* (list ,@msg))))
@ %def gol

<<Export-list of module \module{base}>>=
(export '(oops nraw info gol
          *logging-stream* *logging-on*))
@

\subsection{Assertions}

The following macro can be used to declare assertions.

<<Assertions>>=
(defmacro assert! (cond &optional msg)
  `(UNLESS ,cond
    (FORMAT *ERROR-OUTPUT* "Internal error! Assertion ~A failed!" ',cond)
    ,(if msg
         `(ERROR "~S" ,msg)
         `(ERROR "Entering debugger!"))))

(pushnew :ASSERT! *features*)
@

<<Export-list of module \module{base}>>=
(export 'assert!)
@

%% $Log$
%% Revision 1.13  1996/07/22 15:52:28  kehr
%% Changed the error-system-macros.
%%
%% Revision 1.12  1996/07/11  14:15:36  kehr
%% Complete Major checkin before changing the letter-groups.
%%
%% Revision 1.11  1996/07/03  18:41:34  kehr
%% Checkin after some modifications of the error-system and the loading of
%% indexstyle-modules have been made. Affects all modules.
%%
%% Revision 1.10  1996/06/24  09:12:09  kehr
%% Several changes in all Lisp-modules due to the new startup-module and
%% the implementation of the percentage bar appearing in the processing
%% phases.
%%
%% Revision 1.9  1996/05/29  14:15:18  kehr
%% Complete checkin after the major changes in the markup. See ChangeLog
%% for details.
%%
%% Revision 1.8  1996/05/20  08:45:55  kehr
%% Added macro `ifnot'.
%%
%% Revision 1.7  1996/05/09  11:49:01  kehr
%% Changes in all submodules, due to macro-expansion problems during
%% compilation.
%%
%% Revision 1.6  1996/04/29  08:36:54  kehr
%% Added assert! macro.
%%
%% Revision 1.5  1996/01/31  16:19:02  kehr
%% .
%%
%% Revision 1.4  1996/01/09  14:25:23  kehr
%% Minor modifications.
%%
%% Revision 1.3  1995/12/19  10:57:51  kehr
%% Minor changes.
%%
%% Revision 1.2  1995/11/29  16:51:04  kehr
%% Moved get-next-ordnum to module `locref'.
%%
%% Revision 1.1  1995/11/19  18:38:55  kehr
%% Introduced packages base and locref.
%%
%% Revision 1.2  1995/11/08  16:17:56  kehr
%% Minor modifications.
%%
%% Revision 1.1  1995/10/16  19:23:04  kehr
%% Initial source checkin.
%%
%% Revision 1.6  1995/07/26  16:19:52  kehr
%% Added support for the pretty-printer module. Output of data-structures
%% now looks more readable.
%%
%% Revision 1.5  1995/07/23  20:48:31  kehr
%% Major changes in the location-reference-processing. Full support for
%% merge-to and separate-mixed--rules. The whole processing of
%% location-refernces is more structured now and can be easier maintained.
%%
%% Revision 1.4  1995/07/23  14:14:07  kehr
%% Added support for merge-to--rule. Now works and creates
%% virtual-attributes as expected.
%%
%% Revision 1.3  1995/07/11  15:14:14  kehr
%% Today I finished the definition of indexentries. They now will be
%% inserted into the index when a appropriate location-class was finished.
%%
%% Revision 1.2  1995/07/10  00:58:15  kehr
%% Completed noweb-support. Current version must be debugged to correct
%% some minor errors.
%%
%% Revision 1.1  1995/07/09  18:14:26  kehr
%% Initial checkin.

%% Local Variables:
%% mode: lisp
%% TeX-master: t
%% End:
