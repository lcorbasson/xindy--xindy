;; $Id$
;;
;; This file tests some of the cross-reference features
;;

;; The basic indexentries

(indexentry :key ("index" "flat ~")         :locref "10")
(indexentry :key ("index" "hierarchical ~") :locref "11")
(indexentry :key ("location-reference" "cross-~")    :locref "12")
(indexentry :key ("location-reference" "location-~") :locref "13")
(indexentry :key ("location-reference")     :locref "14")

;; Some for checking the merge-rule transformations. The target that
;; is to be verified is checked with a merge-key comparison.

(indexentry :key ("hüben")  :locref "20")
(indexentry :key ("drüben") :locref "21")
(indexentry :key ("Rüben")  :locref "22")

;; The cross-reference indexentries

;; These point to valid indexentries.
(indexentry :key ("reference")
            :xref ("location-reference")
            :attr "verified")
(indexentry :key ("hierarchies")
            :xref ("index" "hierarchical ~")
            :attr "verified")
(indexentry :key ("hier")
            :xref ("hüben")   ;; matches 'cause of the given merge-rules
            :attr "verified")
(indexentry :key ("dort")
            :xref ("drueben") ;; matches 'cause of the given merge-rules
            :attr "verified")

(indexentry :key ("right") :xref ("left")  :attr "verified")
(indexentry :key ("left")  :xref ("right") :attr "verified")


;; These point to uninvalid keywords.

(indexentry :key ("glossary")
            :xref ("index")
            :attr "verified")

(indexentry :key ("hierarchy")
            :xref ("index" "hierarchical")
            :attr "verified")

(indexentry :key ("foo")
            :xref ("bar")
            :attr "verified")

(indexentry :key ("somewhere out there")
            :xref ("nirvana")
            :attr "unverified") ;; no error, since it is unverified


