# $Id$
#------------------------------------------------------------

xindy is largely written in Common Lisp. We have chosen Common Lisp
for several reasons. Common Lisp is a very powerful rapid prototyping
framework that allows for an efficient and maintainable
implementation. We started using C++ and soon switched to Lisp gaining
an productivity improvement by a significant factor. Since we make
heavy use of the object-oriented features of CLOS, the Common Lisp
Object System, and the dynamic nature of Lisp, thus other Lisp systems
such as Emacs-Lisp will not work.

We have chosen the Common Lisp implementation CLISP as the system of
our choice, since CLISP runs on all commonly used platforms ranging
from DOS/Windows (NT), OS/2 to many UNIX flavors. CLISP has a
relatively small memory footprint (2-4 MB) and is reasonably fast
compared to other Lisp systems.

For efficiency reasons we assume access to the GNU regex library.
And we use our own CLISP plug-in, called ordrules. Together with
CLISP, this makes up the xindy run time engine (aka xindy RTE).

Currently we offer several binary distributions of that xindy RTE to
free users from the need of porting the Lisp system on their own. We
also distribute the whole RTE in source form, including CLISP.

CLISP can be found at
	http://clisp.cons.org/
