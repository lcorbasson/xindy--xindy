#ifndef NOWEB-WRAP_IMK_INCLUDED			/* -*- Indented-Text -*- */
#define NOWEB-WRAP_IMK_INCLUDED

XCOMM ======================================================================
XCOMM Imake module for noweb-wrap
XCOMM $Id$

#include <noweb.imk>

/* history at end */

/*
 * This Imake module noweb-wrap
 *
 * The following target rules are exported:
 *
 * The folowing rules can be used to wrap the output of noweave inside
 * a header and a trailer file. This is necessary if you like to
 * configure your own header (e.g. use LaTeX2e ...). Note: This target
 * works only successfully if the `-n' option of noweave is specified.
 * This option is always turned on in our target rule by default. We
 * could solve this problem using the `-delay' option of noweave and
 * adding \documentclass[..]{..} information into the first part and
 * \end{document} into the last part of the document. But this
 * solution makes it impossible to format document consisting of
 * multiple modules in a whole because we have more than one
 * \document{style,class} in one document. By wrapping the output of
 * noweave between a header and a trailer file we can still work with
 * several files, too.
 *
 *    NowebLaTeXDocTargetWrap(program,headerfile,trailerfile)
 *
 * This rule is intended to typeset multiple noweb sources into one
 * single document. `program' is the name of the generated output file
 * (without suffix `.dvi') and docs is the list of all noweb
 * documents. Note that the only difference in both targetnames is the
 * letter `s' in NowebLaTeXDocumentTarget`s'Wrap and that the all
 * documents must be specified with their extension.
 *
 *    NowebLaTeXDocTargetsWrap(program,headerfile,trailerfile,docs)
 *
 * This rule is intended to typeset multiple noweb sources into one
 * single program target. `program' is the name of the generated
 * output file (with suffix `..lsp') and srcs is the list of all noweb
 * sources.
 *
 *    NowebLispModuleTarget(program,headerfile,trailerfile,docs)
 *
 */

/* ============================================================
 *
 * parameters
 *
 */

/* NowebLaTeXDocTargetWrap -- make a typeset document using LaTeX.
 * We can't use NowebTarget here since we need to noweave the source.
 * We wrap the output of the noweave with a header and a trailer file.
 */
#ifndef NowebLaTeXDocTargetWrap
#define NowebLaTeXDocTargetWrap(program,header,trailer)		@@\
program.tex: program.nw							@@\
	$(NOWEAVE) $(NOWEAVE_FLAGS) -n program.nw |\
	  cat header - trailer > program.tex				@@\
                                                                        @@\
/*TeXFileTarget(latex,program,tex)*/                                    @@\
TeXDocTarget(latex,program)                                             @@\
                                                                        @@\
clean::									@@\
        $(RM) *.mtc?							@@\
        $(RM) program.tex

#endif /* NowebLaTeXDocTargetWrap */

/* NowebLaTeXDocTargetsWrap -- make a typeset document using
 * LaTeX. We can't use NowebTarget here since we need to noweave the
 * source. We wrap the output of the noweave files with a header and a
 * trailer file.
 */
#ifndef NowebLaTeXDocTargetsWrap
#define NowebLaTeXDocTargetsWrap(program,header,trailer,docs)     	@@\
program.tex: docs							@@\
	$(NOWEAVE) $(NOWEAVE_FLAGS) -n docs | \
	  cat header - trailer > program.tex				@@\
                                                                        @@\
/*TeXFileTarget(latex,program,tex)*/                                    @@\
TeXDocTarget(latex,program)                                             @@\
                                                                        @@\
clean::                                                                 @@\
        $(RM) *.mtc?							@@\
        $(RM) program.tex

#endif /* NowebLaTeXDocTargetsWrap */


/* NowebLispModuleTarget -- make a Lisp program module.
 */
#ifndef NowebLispModuleTarget
#define NowebLispModuleTarget(program,srcs)				@@\
program.lsp: srcs							@@\
	$(NOTANGLE) $(NOTANGLE_FLAGS) srcs > program.lsp                @@\
                                                                        @@\
clean::                                                                 @@\
        $(RM) program.lsp						@@\
src:: program.lsp							@@\
all:: src program.fas program.lsp					@@\
									@@\
ReleaseLispObjects(LispModuleObjects(program))				@@\
									@@\
distrib:: program.lsp							@@\
	cp program.lsp ../distrib/src
#endif /* NowebLispModuleTarget */


/* ============================================================

$Log$
Revision 1.5  1996/06/24 09:01:28  kehr
Added support for target `distrib'. Every Lisp-source is copied into
the directory ../distrib/src.

Revision 1.4  1996/05/09  11:49:26  kehr
Changes in all submodules, due to macro-expansion problems during
compilation.

Revision 1.3  1995/12/15  17:05:37  kehr
Rewrote module handling. Now the module source is generated from all
dependend submodules. So there exists only one final source .lsp and
one final Lisp-library (.fas and .lib). Had to many problems with
inconsistencies during the compilation of submodules. The new
generation mechanism is clearer but a little bit slower. (I'm working
on a rs6000--so it doesn't matter at all :-)

Revision 1.2  1995/10/17  15:49:39  kehr
Removed TeX.imk and replaced it with a mixin-module named
TeXspread.imk. Made minor modifications in the noweb-module. It now
supports a `doc'-target which is used to generate all noweaved
documentation from the noweb-sources. Adapted project.conf to these
modifications.

Revision 1.1  1995/10/16  19:21:36  kehr
Changed CVS-imake-template. I hope that it helps to manage the `add'
and `admin'-commands of CVS. I'll verify the correct behaviour later.

Additionally I introduced a new noweb-wrap-imake-module. This manages
the wrapping of a noweaved source by a user-defined header and
trailer. This is neccessary when one wishes to use different
LaTeX-styles etc.

*/


#endif  /* already imported */
